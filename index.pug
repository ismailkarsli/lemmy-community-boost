doctype html
html(lang="en")
	head
		meta(charset="UTF-8")
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
		title Lemmy Community Boost (LCB)
	body
		#main
			article
				h1 Lemmy Community Boost
				p LCB is a tool to "seed" beginner communities in the Lemmyverse.
				h4 The purpose
				p Communities in Lemmy are only federated if a user is subscribes to them from external instance. This means that new communities are not visible to external instance users. To fix that, LCB automatically subscribes to new communities <b>from external instances</b> to make them federated.
				h4 Why 
				p I think mods (including me) wouldn't to put effort into a new community if it doesn't get any interaction, so I think it would be nice to at least start with it appearing in the "All" tab.
				h4 How it works
				p LCB automatically subscribes to communities from external instances <b>until a normal user subscribes</b>. Then it will unsubscribe to not manipulate the community's subscriber count.
				h4 Prohibited
				p LCB will not subscribe to instances/communities that are:
				ul
					li Not guaranteed on Fediseer
					li Has more than 2 censures on Fediseer
					li NSFW flagged
					li Blacklisted manually
			form#input(action="/", method="post") 
				fieldset
					input(type="text", name="community", placeholder="technology@lemmy.world...")
					input(type="submit", value="Add")
			div#status(style="display: none")
			span#loading(style='display: none')
				svg(width='16' height='16' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')
					style.
						.spinner_P7sC{transform-origin:center;animation:spinner_svv2 .75s infinite linear}@keyframes spinner_svv2{100%{transform:rotate(360deg)}}
					path.spinner_P7sC(d='M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z')
			if communities
				h2 Communities
				table#communities
					thead
						tr
							th Name
							th Instance
							th Status
							th Added
					tbody
						each com in communities
							tr(data-name=com.name, data-host=com.host)
								td= com.name
								td= com.host
								td(title=com.progress.map(p => (p.status === "done" ? "✅ " : p.status === "pending" ? "⏳ " : "❌ ")+ p.host).join("\n"))
									if com.progress.filter(p => p.status === "done").length == com.progress.length
										span= "✅"
									else
										if com.progress.filter(p => p.status === "done").length
											span= " ✅ " + com.progress.filter(p => p.status === "done").length
										if com.progress.filter(p => p.status === "pending").length
											span= " ⏳ " + com.progress.filter(p => p.status === "pending").length
										if com.progress.filter(p => p.status === "error").length
											span= " ❌ " + com.progress.filter(p => p.status === "error").length
								td= ((com.date - new Date()) / 1000 / 60 / 60 / 24) > 1 ? "Today" : new Intl.RelativeTimeFormat('en', { numeric: 'auto' }).format(Math.round((com.date - new Date()) / 1000 / 60 / 60 / 24), 'day')
				div(style="margin-top: 12px;")
					p ✅ = Another user subscribed to this community so LCB unsubscribed and the community is now federated.
					p ⏳ = LCB subscribed to this community but no one else subscribed yet.
					p ❌ = LCB tried to subscribe to this community but failed.
			if instances 
				h2 Instances/Users
				table#instances 
					thead
						tr
							th Instance
							th Username
					tbody
						each inst in instances
							tr
								td= inst.host
								td= inst.username
						else 
							tr
								td No instances yet
		footer 
			div If you are an instance admin, the instances and users used are listed above. If you want to add or remove a user from this tool, you can contact me.
			div LCB is open source and you can find the disgusting source code <a href="https://github.com/ismailkarsli/lemmy-community-boost" target="_blank">here</a>.
			div Contact me from lemmy: <a href="https://lemy.lol/u/iso">@iso@lemy.lol</a> or email: iso{at}lemy.lol

		script(type="module").
			const form = document.querySelector("form#input")
			form.addEventListener("submit", async (e) => {
				e.preventDefault()
				const loading = document.querySelector("#loading")
				removeStatus()
				try {
					if (loading) loading.style.display = "flex"
					form.childNodes.forEach(n => n.disabled = true)
					const input = form.querySelector("input[type=text]")
					if(!input.value) {
						return addStatus(false, "Please enter a community name")
					}
					const response = await fetch("/", {
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify({community: input.value})
					}).then(r => r.json())
					addStatus(response.success, response.message)
					if(response.success) {
						input.value = ""
						// delete old list item
						const oldItem = document.querySelector(`#communities tr[data-name="${response.community.name}"][data-host="${response.community.host}"]`)
						if(oldItem) oldItem.remove()
						// add new list item
						const table = document.querySelector("table#communities tbody")
						const row = document.createElement("tr")
						const name = document.createElement("td")
						name.innerText = response.community.name
						const host = document.createElement("td")
						host.innerText = response.community.host
						const status = document.createElement("td")
						status.title = "Done/Pending/Failed"
						status.innerText = "⏳"
						const date = document.createElement("td")
						date.innerText = "0 hours"
						const remaining = document.createElement("td")
						remaining.innerText = response.community.progress.filter(p => !p.status).map(p => p.host).join(", ")

						row.append(name, host, status, date, remaining)
						table.prepend(row)
					}
				} catch(e) {
					console.error(e)
					addStatus(false, "Something went wrong")
				} finally {
					if (loading) loading.style.display = "none"
					form.childNodes.forEach(n => n.disabled = false)
				}
			})
			function addStatus(success, message) {
				const status = document.querySelector("div#status")
				status.innerText = message
				status.style.display = "block"
				if(success) {
					status.style.color = "green"
				} else {
					status.style.color = "red"
				}
			}
			function removeStatus() {
				const status = document.querySelector("div#status")
				status.style.display = "none"
			}
	style.
		body {
			font-family: sans-serif;
			
		}
		#main {
			max-width: 800px;
			margin: 0 auto;
			padding: 20px;
		}
		fieldset {
			display: flex;
			border: none;
			margin: 0;
			padding: 0;
		}
		form input {
			width: 100%;
			padding: 10px;
			margin: 4px 0;
			border: 1px solid #ccc;
			outline: none;
			border-radius: 0;
			box-sizing: border-box;
		}
		form input[type=submit] {
			width: auto;
			background-color: #4CAF50;
			color: white;
			border: none;
			cursor: pointer;
			min-width: 100px;
		}
		form input[type=submit]:hover {
			background-color: #45a049;
		}
		form input[type=submit]:disabled {
			background-color: #cccccc;
			cursor: not-allowed;
		}
		#status {
			margin: 0;
			padding: 0;
			text-align: center;
		}
		#loading {
			display: flex;
			justify-content: center;
		}
		table {
			border-collapse: collapse;
			width: 100%;
		}
		th, td {
			text-align: left;
			padding: 8px;
		}
		tr:nth-child(even) {
			background-color: #f2f2f2;
		}
		tr:hover {
			background-color: #ddd;
		}
		th {
			background-color: #4CAF50;
			color: white;
		}
		footer {
			margin-top: 20px;
			font-size: 0.8rem;
			text-align: center;
		}
		footer div {
			margin-bottom: 5px;
		}
		footer a {
			color: #4CAF50;
		}
		h4 {
			margin: 12px 0;
		}
		p {
			margin: 2px 0;
		}